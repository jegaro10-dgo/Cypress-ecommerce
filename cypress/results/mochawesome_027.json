{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-09-04T00:08:09.941Z",
    "end": "2025-09-04T00:08:17.078Z",
    "duration": 7137,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0fbb82b0-ad72-4dc2-8a32-c8aeb7f0161c",
      "title": "",
      "fullFile": "cypress/e2e/api-test.cy.js",
      "file": "cypress/e2e/api-test.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0cf49ec9-0434-427b-9b9a-3c364e2bf3ec",
          "title": "Pruebas de API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Debería iniciar sesión usando API y verificar los productos",
              "fullTitle": "Pruebas de API Debería iniciar sesión usando API y verificar los productos",
              "timedOut": null,
              "duration": 5289,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// En lugar de usar un comando, hacemos el proceso de login en la prueba.\n// Esto es lo que haría un test real de API.\n// 1. Visita la página de login\ncy.visit('https://www.saucedemo.com/');\n// 2. Haz el login con la interfaz, pero solo una vez\n// Esto crea la sesión y las cookies que usaremos en todas las pruebas.\ncy.session('standard_user', () => {\n  cy.get('[data-test=\"username\"]').type('standard_user');\n  cy.get('[data-test=\"password\"]').type('secret_sauce');\n  cy.get('[data-test=\"login-button\"]').click();\n});\n// 3. Después de que el cy.session se complete, la sesión ya está establecida.\n// Ahora podemos ir a la página de inventario directamente.\n// Cypress usará la sesión que ya está en la memoria.\ncy.visit('https://www.saucedemo.com/inventory.html');\n// 4. Ahora, haz tus aserciones de la página de inventario\n_InventoryPage.default.verifyPageLoaded();\n_InventoryPage.default.getShoppingCartBadge().should('not.exist');\n// 5. Continúa con tu flujo de prueba\nconst productName = 'sauce-labs-backpack';\n_InventoryPage.default.addProductToCart(productName);\n_InventoryPage.default.getShoppingCartBadge().should('have.text', '1');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-test=\"username\"]`, but never found it.\n\nThis error occurred while creating the session. Because the session setup failed, we failed the test.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-test=\"username\"]`, but never found it.\n\nThis error occurred while creating the session. Because the session setup failed, we failed the test.\n    at Object.eval [as setup] (webpack://cypress-e-commerce/./cypress/e2e/api-test.cy.js:16:11)\n    at Context.<anonymous> (https://www.saucedemo.com/__cypress/runner/cypress_runner.js:136486:38)\n    at getRet (https://www.saucedemo.com/__cypress/runner/cypress_runner.js:121549:20)\n    at tryCatcher (https://www.saucedemo.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (https://www.saucedemo.com/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (https://www.saucedemo.com/__cypress/runner/cypress_runner.js:121560:66)\n    at Context.then (https://www.saucedemo.com/__cypress/runner/cypress_runner.js:121811:21)\n    at wrapped (https://www.saucedemo.com/__cypress/runner/cypress_runner.js:141517:19)",
                "diff": null
              },
              "uuid": "c7f50b51-c870-4487-9e07-16b03e225aa7",
              "parentUUID": "0cf49ec9-0434-427b-9b9a-3c364e2bf3ec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c7f50b51-c870-4487-9e07-16b03e225aa7"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5289,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}